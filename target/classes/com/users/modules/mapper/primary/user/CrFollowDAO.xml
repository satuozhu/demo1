<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.users.modules.mapper.primary.user.CrFollowDAO">
  <resultMap id="BaseResultMap" type="com.common.entity.user.CrFollow">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="follower_id" jdbcType="VARCHAR" property="followerId" />
    <result column="following_id" jdbcType="VARCHAR" property="followingId" />
    <result column="following_type" jdbcType="INTEGER" property="followingType" />
    <result column="follow_time" jdbcType="BIGINT" property="followTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, follower_id, following_id, following_type, follow_time
  </sql>
  <select id="selectByExample" parameterType="com.common.entity.user.CrFollowExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cr_follow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>

  <!-- 我的关注 医生 type=0 -->
  <select id="selectFollowDoctorById" resultMap="BaseResultMap">

  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cr_follow
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cr_follow
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.common.entity.user.CrFollowExample">
    delete from cr_follow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.common.entity.user.CrFollow">
    insert into cr_follow (id, follower_id, following_id, 
      following_type, follow_time)
    values (#{id,jdbcType=BIGINT}, #{followerId,jdbcType=VARCHAR}, #{followingId,jdbcType=VARCHAR}, 
      #{followingType,jdbcType=INTEGER}, #{followTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.common.entity.user.CrFollow">
    insert into cr_follow
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="followerId != null">
        follower_id,
      </if>
      <if test="followingId != null">
        following_id,
      </if>
      <if test="followingType != null">
        following_type,
      </if>
      <if test="followTime != null">
        follow_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="followerId != null">
        #{followerId,jdbcType=VARCHAR},
      </if>
      <if test="followingId != null">
        #{followingId,jdbcType=VARCHAR},
      </if>
      <if test="followingType != null">
        #{followingType,jdbcType=INTEGER},
      </if>
      <if test="followTime != null">
        #{followTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.common.entity.user.CrFollowExample" resultType="java.lang.Long">
    select count(*) from cr_follow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cr_follow
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.followerId != null">
        follower_id = #{record.followerId,jdbcType=VARCHAR},
      </if>
      <if test="record.followingId != null">
        following_id = #{record.followingId,jdbcType=VARCHAR},
      </if>
      <if test="record.followingType != null">
        following_type = #{record.followingType,jdbcType=INTEGER},
      </if>
      <if test="record.followTime != null">
        follow_time = #{record.followTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cr_follow
    set id = #{record.id,jdbcType=BIGINT},
      follower_id = #{record.followerId,jdbcType=VARCHAR},
      following_id = #{record.followingId,jdbcType=VARCHAR},
      following_type = #{record.followingType,jdbcType=INTEGER},
      follow_time = #{record.followTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.common.entity.user.CrFollow">
    update cr_follow
    <set>
      <if test="followerId != null">
        follower_id = #{followerId,jdbcType=VARCHAR},
      </if>
      <if test="followingId != null">
        following_id = #{followingId,jdbcType=VARCHAR},
      </if>
      <if test="followingType != null">
        following_type = #{followingType,jdbcType=INTEGER},
      </if>
      <if test="followTime != null">
        follow_time = #{followTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.common.entity.user.CrFollow">
    update cr_follow
    set follower_id = #{followerId,jdbcType=VARCHAR},
      following_id = #{followingId,jdbcType=VARCHAR},
      following_type = #{followingType,jdbcType=INTEGER},
      follow_time = #{followTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>