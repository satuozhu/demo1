<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.users.modules.mapper.primary.user.CrUserMapper">
  <resultMap id="BaseResultMap" type="com.users.modules.user.entity.CrUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="pwd" jdbcType="VARCHAR" property="pwd" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
    <result column="height" jdbcType="VARCHAR" property="height" />
    <result column="weight" jdbcType="VARCHAR" property="weight" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="tags" jdbcType="VARCHAR" property="tags" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
    <result column="platform_type" jdbcType="INTEGER" property="platformType" />
    <result column="login_type" jdbcType="INTEGER" property="loginType" />
    <result column="auth_type" jdbcType="INTEGER" property="authType" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.users.modules.user.entity.CrUser">
    <result column="head_pic" jdbcType="LONGVARCHAR" property="headPic" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs2" type="com.common.entity.user.CrUser">
    <result column="head_pic" jdbcType="LONGVARCHAR" property="headPic" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_name, account, phone, email, pwd, salt, sex, birthday, height, weight, create_time,
    update_time, tags, openid, flag, platform_type, login_type, auth_type
  </sql>
  <sql id="Blob_Column_List">
    head_pic
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.common.entity.user.CrUserExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cr_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.common.entity.user.CrUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cr_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cr_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKey2" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs2">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cr_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cr_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.common.entity.user.CrUserExample">
    delete from cr_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.users.modules.user.entity.CrUser">
    insert into cr_user (id, user_name, account,
      phone, email, pwd,
      salt, sex, birthday, height,
      weight, create_time, update_time,
      tags, openid, flag,
      platform_type, login_type, auth_type,
      head_pic)
    values (#{id,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR},
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR},
      #{salt,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{birthday,jdbcType=VARCHAR}, #{height,jdbcType=VARCHAR},
      #{weight,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT},
      #{tags,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR}, #{flag,jdbcType=INTEGER},
      #{platformType,jdbcType=INTEGER}, #{loginType,jdbcType=INTEGER}, #{authType,jdbcType=INTEGER},
      #{headPic,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.users.modules.user.entity.CrUser">
    insert into cr_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="pwd != null">
        pwd,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="height != null">
        height,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="tags != null">
        tags,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="platformType != null">
        platform_type,
      </if>
      <if test="loginType != null">
        login_type,
      </if>
      <if test="authType != null">
        auth_type,
      </if>
      <if test="headPic != null">
        head_pic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="height != null">
        #{height,jdbcType=VARCHAR},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="tags != null">
        #{tags,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="platformType != null">
        #{platformType,jdbcType=INTEGER},
      </if>
      <if test="loginType != null">
        #{loginType,jdbcType=INTEGER},
      </if>
      <if test="authType != null">
        #{authType,jdbcType=INTEGER},
      </if>
      <if test="headPic != null">
        #{headPic,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.common.entity.user.CrUserExample" resultType="java.lang.Long">
    select count(*) from cr_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cr_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.pwd != null">
        pwd = #{record.pwd,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null">
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=VARCHAR},
      </if>
      <if test="record.height != null">
        height = #{record.height,jdbcType=VARCHAR},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.tags != null">
        tags = #{record.tags,jdbcType=VARCHAR},
      </if>
      <if test="record.openid != null">
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.flag != null">
        flag = #{record.flag,jdbcType=INTEGER},
      </if>
      <if test="record.platformType != null">
        platform_type = #{record.platformType,jdbcType=INTEGER},
      </if>
      <if test="record.loginType != null">
        login_type = #{record.loginType,jdbcType=INTEGER},
      </if>
      <if test="record.authType != null">
        auth_type = #{record.authType,jdbcType=INTEGER},
      </if>
      <if test="record.headPic != null">
        head_pic = #{record.headPic,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update cr_user
    set id = #{record.id,jdbcType=BIGINT},
    user_name = #{record.userName,jdbcType=VARCHAR},
    account = #{record.account,jdbcType=VARCHAR},
    phone = #{record.phone,jdbcType=VARCHAR},
    email = #{record.email,jdbcType=VARCHAR},
    pwd = #{record.pwd,jdbcType=VARCHAR},
    salt = #{record.salt,jdbcType=VARCHAR},
    sex = #{record.sex,jdbcType=CHAR},
    birthday = #{record.birthday,jdbcType=VARCHAR},
    height = #{record.height,jdbcType=VARCHAR},
    weight = #{record.weight,jdbcType=VARCHAR},
    create_time = #{record.createTime,jdbcType=BIGINT},
    update_time = #{record.updateTime,jdbcType=BIGINT},
    tags = #{record.tags,jdbcType=VARCHAR},
    openid = #{record.openid,jdbcType=VARCHAR},
    flag = #{record.flag,jdbcType=INTEGER},
    platform_type = #{record.platformType,jdbcType=INTEGER},
    login_type = #{record.loginType,jdbcType=INTEGER},
    auth_type = #{record.authType,jdbcType=INTEGER},
    head_pic = #{record.headPic,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cr_user
    set id = #{record.id,jdbcType=BIGINT},
    user_name = #{record.userName,jdbcType=VARCHAR},
    account = #{record.account,jdbcType=VARCHAR},
    phone = #{record.phone,jdbcType=VARCHAR},
    email = #{record.email,jdbcType=VARCHAR},
    pwd = #{record.pwd,jdbcType=VARCHAR},
    salt = #{record.salt,jdbcType=VARCHAR},
    sex = #{record.sex,jdbcType=CHAR},
    birthday = #{record.birthday,jdbcType=VARCHAR},
    height = #{record.height,jdbcType=VARCHAR},
    weight = #{record.weight,jdbcType=VARCHAR},
    create_time = #{record.createTime,jdbcType=BIGINT},
    update_time = #{record.updateTime,jdbcType=BIGINT},
    tags = #{record.tags,jdbcType=VARCHAR},
    openid = #{record.openid,jdbcType=VARCHAR},
    flag = #{record.flag,jdbcType=INTEGER},
    platform_type = #{record.platformType,jdbcType=INTEGER},
    login_type = #{record.loginType,jdbcType=INTEGER},
    auth_type = #{record.authType,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.users.modules.user.entity.CrUser">
    update cr_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="height != null">
        height = #{height,jdbcType=VARCHAR},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="tags != null">
        tags = #{tags,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="platformType != null">
        platform_type = #{platformType,jdbcType=INTEGER},
      </if>
      <if test="loginType != null">
        login_type = #{loginType,jdbcType=INTEGER},
      </if>
      <if test="authType != null">
        auth_type = #{authType,jdbcType=INTEGER},
      </if>
      <if test="headPic != null">
        head_pic = #{headPic,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.users.modules.user.entity.CrUser">
    update cr_user
    set user_name = #{userName,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      height = #{height,jdbcType=VARCHAR},
      weight = #{weight,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      tags = #{tags,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER},
      platform_type = #{platformType,jdbcType=INTEGER},
      login_type = #{loginType,jdbcType=INTEGER},
      auth_type = #{authType,jdbcType=INTEGER},
      head_pic = #{headPic,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.users.modules.user.entity.CrUser">
    update cr_user
    set user_name = #{userName,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      height = #{height,jdbcType=VARCHAR},
      weight = #{weight,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      tags = #{tags,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER},
      platform_type = #{platformType,jdbcType=INTEGER},
      login_type = #{loginType,jdbcType=INTEGER},
      auth_type = #{authType,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>