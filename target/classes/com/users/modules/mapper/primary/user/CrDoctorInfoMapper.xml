<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.users.modules.mapper.primary.user.CrDoctorInfoMapper">
  <resultMap id="BaseResultMap" type="com.common.entity.user.CrDoctorInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="doctor_id" jdbcType="BIGINT" property="doctorId" />
    <result column="hospital" jdbcType="VARCHAR" property="hospital" />
    <result column="section" jdbcType="VARCHAR" property="section" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="forte" jdbcType="VARCHAR" property="forte" />
    <result column="introduce" jdbcType="VARCHAR" property="introduce" />
    <result column="consult_price" jdbcType="DECIMAL" property="consultPrice" />
    <result column="star_class" jdbcType="INTEGER" property="starClass" />
    <result column="patient_num" jdbcType="INTEGER" property="patientNum" />
    <result column="praise_rate" jdbcType="CHAR" property="praiseRate" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, doctor_id, hospital, `section`, `level`, forte, introduce, consult_price, star_class,
    patient_num, praise_rate, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.common.entity.user.CrDoctorInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cr_doctor_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from cr_doctor_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cr_doctor_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.common.entity.user.CrDoctorInfoExample">
    delete from cr_doctor_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.common.entity.user.CrDoctorInfo">
    insert into cr_doctor_info (id, doctor_id, hospital,
      `section`, `level`, forte,
      introduce, consult_price, star_class,
      patient_num, praise_rate, create_time,
      update_time)
    values (#{id,jdbcType=BIGINT}, #{doctorId,jdbcType=BIGINT}, #{hospital,jdbcType=VARCHAR},
      #{section,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR}, #{forte,jdbcType=VARCHAR},
      #{introduce,jdbcType=VARCHAR}, #{consultPrice,jdbcType=DECIMAL}, #{starClass,jdbcType=INTEGER},
      #{patientNum,jdbcType=INTEGER}, #{praiseRate,jdbcType=CHAR}, #{createTime,jdbcType=BIGINT},
      #{updateTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.common.entity.user.CrDoctorInfo">
    insert into cr_doctor_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="doctorId != null">
        doctor_id,
      </if>
      <if test="hospital != null">
        hospital,
      </if>
      <if test="section != null">
        `section`,
      </if>
      <if test="level != null">
        `level`,
      </if>
      <if test="forte != null">
        forte,
      </if>
      <if test="introduce != null">
        introduce,
      </if>
      <if test="consultPrice != null">
        consult_price,
      </if>
      <if test="starClass != null">
        star_class,
      </if>
      <if test="patientNum != null">
        patient_num,
      </if>
      <if test="praiseRate != null">
        praise_rate,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="doctorId != null">
        #{doctorId,jdbcType=BIGINT},
      </if>
      <if test="hospital != null">
        #{hospital,jdbcType=VARCHAR},
      </if>
      <if test="section != null">
        #{section,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="forte != null">
        #{forte,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="consultPrice != null">
        #{consultPrice,jdbcType=DECIMAL},
      </if>
      <if test="starClass != null">
        #{starClass,jdbcType=INTEGER},
      </if>
      <if test="patientNum != null">
        #{patientNum,jdbcType=INTEGER},
      </if>
      <if test="praiseRate != null">
        #{praiseRate,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.common.entity.user.CrDoctorInfoExample" resultType="java.lang.Long">
    select count(*) from cr_doctor_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cr_doctor_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.doctorId != null">
        doctor_id = #{record.doctorId,jdbcType=BIGINT},
      </if>
      <if test="record.hospital != null">
        hospital = #{record.hospital,jdbcType=VARCHAR},
      </if>
      <if test="record.section != null">
        `section` = #{record.section,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        `level` = #{record.level,jdbcType=VARCHAR},
      </if>
      <if test="record.forte != null">
        forte = #{record.forte,jdbcType=VARCHAR},
      </if>
      <if test="record.introduce != null">
        introduce = #{record.introduce,jdbcType=VARCHAR},
      </if>
      <if test="record.consultPrice != null">
        consult_price = #{record.consultPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.starClass != null">
        star_class = #{record.starClass,jdbcType=INTEGER},
      </if>
      <if test="record.patientNum != null">
        patient_num = #{record.patientNum,jdbcType=INTEGER},
      </if>
      <if test="record.praiseRate != null">
        praise_rate = #{record.praiseRate,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cr_doctor_info
    set id = #{record.id,jdbcType=BIGINT},
    doctor_id = #{record.doctorId,jdbcType=BIGINT},
    hospital = #{record.hospital,jdbcType=VARCHAR},
    `section` = #{record.section,jdbcType=VARCHAR},
    `level` = #{record.level,jdbcType=VARCHAR},
    forte = #{record.forte,jdbcType=VARCHAR},
    introduce = #{record.introduce,jdbcType=VARCHAR},
    consult_price = #{record.consultPrice,jdbcType=DECIMAL},
    star_class = #{record.starClass,jdbcType=INTEGER},
    patient_num = #{record.patientNum,jdbcType=INTEGER},
    praise_rate = #{record.praiseRate,jdbcType=CHAR},
    create_time = #{record.createTime,jdbcType=BIGINT},
    update_time = #{record.updateTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.common.entity.user.CrDoctorInfo">
    update cr_doctor_info
    <set>
      <if test="doctorId != null">
        doctor_id = #{doctorId,jdbcType=BIGINT},
      </if>
      <if test="hospital != null">
        hospital = #{hospital,jdbcType=VARCHAR},
      </if>
      <if test="section != null">
        `section` = #{section,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        `level` = #{level,jdbcType=VARCHAR},
      </if>
      <if test="forte != null">
        forte = #{forte,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="consultPrice != null">
        consult_price = #{consultPrice,jdbcType=DECIMAL},
      </if>
      <if test="starClass != null">
        star_class = #{starClass,jdbcType=INTEGER},
      </if>
      <if test="patientNum != null">
        patient_num = #{patientNum,jdbcType=INTEGER},
      </if>
      <if test="praiseRate != null">
        praise_rate = #{praiseRate,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.common.entity.user.CrDoctorInfo">
    update cr_doctor_info
    set doctor_id = #{doctorId,jdbcType=BIGINT},
      hospital = #{hospital,jdbcType=VARCHAR},
      `section` = #{section,jdbcType=VARCHAR},
      `level` = #{level,jdbcType=VARCHAR},
      forte = #{forte,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      consult_price = #{consultPrice,jdbcType=DECIMAL},
      star_class = #{starClass,jdbcType=INTEGER},
      patient_num = #{patientNum,jdbcType=INTEGER},
      praise_rate = #{praiseRate,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>