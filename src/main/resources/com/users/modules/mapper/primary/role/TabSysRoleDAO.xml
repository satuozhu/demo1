<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.users.modules.mapper.primary.role.TabSysRoleDAO">
  <resultMap id="BaseResultMap" type="com.common.entity.role.TabSysRole">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_mean" jdbcType="VARCHAR" property="roleMean" />
    <result column="role_activate" jdbcType="SMALLINT" property="roleActivate" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="org_id" jdbcType="BIGINT" property="orgId" />
    <result column="role_desc" jdbcType="VARCHAR" property="roleDesc" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_mean, role_activate, `type`, org_id, role_desc, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.common.entity.role.TabSysRoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tab_sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tab_sys_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tab_sys_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.common.entity.role.TabSysRoleExample">
    delete from tab_sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.common.entity.role.TabSysRole">
    insert into tab_sys_role (role_id, role_mean, role_activate, 
      `type`, org_id, role_desc, 
      create_time, update_time)
    values (#{roleId,jdbcType=BIGINT}, #{roleMean,jdbcType=VARCHAR}, #{roleActivate,jdbcType=SMALLINT}, 
      #{type,jdbcType=INTEGER}, #{orgId,jdbcType=BIGINT}, #{roleDesc,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.common.entity.role.TabSysRole">
    insert into tab_sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleMean != null">
        role_mean,
      </if>
      <if test="roleActivate != null">
        role_activate,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="orgId != null">
        org_id,
      </if>
      <if test="roleDesc != null">
        role_desc,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleMean != null">
        #{roleMean,jdbcType=VARCHAR},
      </if>
      <if test="roleActivate != null">
        #{roleActivate,jdbcType=SMALLINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=BIGINT},
      </if>
      <if test="roleDesc != null">
        #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.common.entity.role.TabSysRoleExample" resultType="java.lang.Long">
    select count(*) from tab_sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tab_sys_role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleMean != null">
        role_mean = #{record.roleMean,jdbcType=VARCHAR},
      </if>
      <if test="record.roleActivate != null">
        role_activate = #{record.roleActivate,jdbcType=SMALLINT},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.orgId != null">
        org_id = #{record.orgId,jdbcType=BIGINT},
      </if>
      <if test="record.roleDesc != null">
        role_desc = #{record.roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tab_sys_role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_mean = #{record.roleMean,jdbcType=VARCHAR},
      role_activate = #{record.roleActivate,jdbcType=SMALLINT},
      `type` = #{record.type,jdbcType=INTEGER},
      org_id = #{record.orgId,jdbcType=BIGINT},
      role_desc = #{record.roleDesc,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.common.entity.role.TabSysRole">
    update tab_sys_role
    <set>
      <if test="roleMean != null">
        role_mean = #{roleMean,jdbcType=VARCHAR},
      </if>
      <if test="roleActivate != null">
        role_activate = #{roleActivate,jdbcType=SMALLINT},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="orgId != null">
        org_id = #{orgId,jdbcType=BIGINT},
      </if>
      <if test="roleDesc != null">
        role_desc = #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.common.entity.role.TabSysRole">
    update tab_sys_role
    set role_mean = #{roleMean,jdbcType=VARCHAR},
      role_activate = #{roleActivate,jdbcType=SMALLINT},
      `type` = #{type,jdbcType=INTEGER},
      org_id = #{orgId,jdbcType=BIGINT},
      role_desc = #{roleDesc,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
</mapper>